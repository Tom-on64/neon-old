(* Current Neon Syntax *)

program = statement*; (* Root Node*)

(* Nodes *)
statement = return | declaration | assignment | scope | if | while;
declaration = type identifier "=" expression;
assignment = (identifier ("="|"+="|"-=") expression)|(identifier("++"|"--"));
return = "return" expr;
scope = ("{" statement* "}");
if = "if" "(" expr ")" (scope|statement) ("else" (scope|statement))?;
while = "while" "(" expr ")" (scope|statement);

expression = term | binExpressions;
term = intLit | identifier | "(" expr ")";
binExpression = (expression "*" expression) | (expression "/" expression) | (expression "+" expression) | (expression "-" expression);

(* IToken *)
identifier = [A-Za-z_][A-Za-z0-9_]*;
type = ?type?;
intLit = ?LInt?;
